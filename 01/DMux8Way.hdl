// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/01/DMux8Way.hdl

/**
 * 8-way demultiplexor:
 * {a, b, c, d, e, f, g, h} = {in, 0, 0, 0, 0, 0, 0, 0} if sel == 000
 *                            {0, in, 0, 0, 0, 0, 0, 0} if sel == 001
 *                            etc.
 *                            {0, 0, 0, 0, 0, 0, 0, in} if sel == 111
 */

CHIP DMux8Way {
    IN in, sel[3];
    OUT a, b, c, d, e, f, g, h;

    PARTS:
    DMux4Way(in=in, sel=sel[0..1], a=temp1, b=temp2, c=temp3, d=temp4);
    DMux(in=temp1, sel=sel[2], a=a, b=e);
    DMux(in=temp2, sel=sel[2], a=b, b=f);
    DMux(in=temp3, sel=sel[2], a=c, b=g);
    DMux(in=temp4, sel=sel[2], a=d, b=h);

    // Possible other (and more readble) implemention (while studying for the test):
    // DMux(in=in, sel=sel[2], a=ABCD, b=EFGH);
	// DMux4Way(in=ABCD, sel=sel[0..1], a=a, b=b, c=c, d=d);
	// DMux4Way(in=EFGH, sel=sel[0..1], a=e, b=f, c=g, d=h);
}