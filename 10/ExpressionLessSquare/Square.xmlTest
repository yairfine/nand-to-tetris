<?xml version="1.0" ?>
<class>
  <keyword>class</keyword>
  <identifier>Square</identifier>
  <symbol>{</symbol>
  <classVarDec>
    <keyword>field</keyword>
    <keyword>int</keyword>
    <identifier>x</identifier>
    <symbol>,</symbol>
    <identifier>y</identifier>
    <symbol>;</symbol>
  </classVarDec>
  <classVarDec>
    <keyword>field</keyword>
    <keyword>int</keyword>
    <identifier>size</identifier>
    <symbol>;</symbol>
  </classVarDec>
  <subroutineDec>
    <keyword>constructor</keyword>
    <identifier>Square</identifier>
    <identifier>new</identifier>
    <symbol>(</symbol>
    <parameterList>
      <keyword>int</keyword>
      <identifier>Ax</identifier>
      <symbol>,</symbol>
      <keyword>int</keyword>
      <identifier>Ay</identifier>
      <symbol>,</symbol>
      <keyword>int</keyword>
      <identifier>Asize</identifier>
    </parameterList>
    <symbol>)</symbol>
    <subroutineBody>
      <symbol>{</symbol>
      <statements>
        <letStatement/>
        <letStatement/>
        <letStatement/>
        <doStatement>
          <subroutineCall>
            <expressionList/>
            <symbol>)</symbol>
          </subroutineCall>
          <symbol>;</symbol>
        </doStatement>
        <returnStatement/>
      </statements>
      <symbol>}</symbol>
    </subroutineBody>
  </subroutineDec>
  <subroutineDec>
    <keyword>method</keyword>
    <keyword>void</keyword>
    <identifier>dispose</identifier>
    <symbol>(</symbol>
    <parameterList/>
    <symbol>)</symbol>
    <subroutineBody>
      <symbol>{</symbol>
      <statements>
        <doStatement>
          <subroutineCall>
            <expressionList/>
            <symbol>)</symbol>
          </subroutineCall>
          <symbol>;</symbol>
        </doStatement>
        <returnStatement/>
      </statements>
      <symbol>}</symbol>
    </subroutineBody>
  </subroutineDec>
  <subroutineDec>
    <keyword>method</keyword>
    <keyword>void</keyword>
    <identifier>draw</identifier>
    <symbol>(</symbol>
    <parameterList/>
    <symbol>)</symbol>
    <subroutineBody>
      <symbol>{</symbol>
      <statements>
        <doStatement>
          <subroutineCall>
            <expressionList/>
            <symbol>)</symbol>
          </subroutineCall>
          <symbol>;</symbol>
        </doStatement>
        <doStatement>
          <subroutineCall>
            <expressionList/>
            <symbol>)</symbol>
          </subroutineCall>
          <symbol>;</symbol>
        </doStatement>
        <returnStatement/>
      </statements>
      <symbol>}</symbol>
    </subroutineBody>
  </subroutineDec>
  <subroutineDec>
    <keyword>method</keyword>
    <keyword>void</keyword>
    <identifier>erase</identifier>
    <symbol>(</symbol>
    <parameterList/>
    <symbol>)</symbol>
    <subroutineBody>
      <symbol>{</symbol>
      <statements>
        <doStatement>
          <subroutineCall>
            <expressionList/>
            <symbol>)</symbol>
          </subroutineCall>
          <symbol>;</symbol>
        </doStatement>
        <doStatement>
          <subroutineCall>
            <expressionList/>
            <symbol>)</symbol>
          </subroutineCall>
          <symbol>;</symbol>
        </doStatement>
        <returnStatement/>
      </statements>
      <symbol>}</symbol>
    </subroutineBody>
  </subroutineDec>
  <subroutineDec>
    <keyword>method</keyword>
    <keyword>void</keyword>
    <identifier>incSize</identifier>
    <symbol>(</symbol>
    <parameterList/>
    <symbol>)</symbol>
    <subroutineBody>
      <symbol>{</symbol>
      <statements>
        <ifStatement>
          <statements>
            <doStatement>
              <subroutineCall>
                <expressionList/>
                <symbol>)</symbol>
              </subroutineCall>
              <symbol>;</symbol>
            </doStatement>
            <letStatement/>
            <doStatement>
              <subroutineCall>
                <expressionList/>
                <symbol>)</symbol>
              </subroutineCall>
              <symbol>;</symbol>
            </doStatement>
          </statements>
          <symbol>}</symbol>
        </ifStatement>
        <returnStatement/>
      </statements>
      <symbol>}</symbol>
    </subroutineBody>
  </subroutineDec>
  <subroutineDec>
    <keyword>method</keyword>
    <keyword>void</keyword>
    <identifier>decSize</identifier>
    <symbol>(</symbol>
    <parameterList/>
    <symbol>)</symbol>
    <subroutineBody>
      <symbol>{</symbol>
      <statements>
        <ifStatement>
          <statements>
            <doStatement>
              <subroutineCall>
                <expressionList/>
                <symbol>)</symbol>
              </subroutineCall>
              <symbol>;</symbol>
            </doStatement>
            <letStatement/>
            <doStatement>
              <subroutineCall>
                <expressionList/>
                <symbol>)</symbol>
              </subroutineCall>
              <symbol>;</symbol>
            </doStatement>
          </statements>
          <symbol>}</symbol>
        </ifStatement>
        <returnStatement/>
      </statements>
      <symbol>}</symbol>
    </subroutineBody>
  </subroutineDec>
  <subroutineDec>
    <keyword>method</keyword>
    <keyword>void</keyword>
    <identifier>moveUp</identifier>
    <symbol>(</symbol>
    <parameterList/>
    <symbol>)</symbol>
    <subroutineBody>
      <symbol>{</symbol>
      <statements>
        <ifStatement>
          <statements>
            <doStatement>
              <subroutineCall>
                <expressionList/>
                <symbol>)</symbol>
              </subroutineCall>
              <symbol>;</symbol>
            </doStatement>
            <doStatement>
              <subroutineCall>
                <expressionList/>
                <symbol>)</symbol>
              </subroutineCall>
              <symbol>;</symbol>
            </doStatement>
            <letStatement/>
            <doStatement>
              <subroutineCall>
                <expressionList/>
                <symbol>)</symbol>
              </subroutineCall>
              <symbol>;</symbol>
            </doStatement>
            <doStatement>
              <subroutineCall>
                <expressionList/>
                <symbol>)</symbol>
              </subroutineCall>
              <symbol>;</symbol>
            </doStatement>
          </statements>
          <symbol>}</symbol>
        </ifStatement>
        <returnStatement/>
      </statements>
      <symbol>}</symbol>
    </subroutineBody>
  </subroutineDec>
  <subroutineDec>
    <keyword>method</keyword>
    <keyword>void</keyword>
    <identifier>moveDown</identifier>
    <symbol>(</symbol>
    <parameterList/>
    <symbol>)</symbol>
    <subroutineBody>
      <symbol>{</symbol>
      <statements>
        <ifStatement>
          <statements>
            <doStatement>
              <subroutineCall>
                <expressionList/>
                <symbol>)</symbol>
              </subroutineCall>
              <symbol>;</symbol>
            </doStatement>
            <doStatement>
              <subroutineCall>
                <expressionList/>
                <symbol>)</symbol>
              </subroutineCall>
              <symbol>;</symbol>
            </doStatement>
            <letStatement/>
            <doStatement>
              <subroutineCall>
                <expressionList/>
                <symbol>)</symbol>
              </subroutineCall>
              <symbol>;</symbol>
            </doStatement>
            <doStatement>
              <subroutineCall>
                <expressionList/>
                <symbol>)</symbol>
              </subroutineCall>
              <symbol>;</symbol>
            </doStatement>
          </statements>
          <symbol>}</symbol>
        </ifStatement>
        <returnStatement/>
      </statements>
      <symbol>}</symbol>
    </subroutineBody>
  </subroutineDec>
  <subroutineDec>
    <keyword>method</keyword>
    <keyword>void</keyword>
    <identifier>moveLeft</identifier>
    <symbol>(</symbol>
    <parameterList/>
    <symbol>)</symbol>
    <subroutineBody>
      <symbol>{</symbol>
      <statements>
        <ifStatement>
          <statements>
            <doStatement>
              <subroutineCall>
                <expressionList/>
                <symbol>)</symbol>
              </subroutineCall>
              <symbol>;</symbol>
            </doStatement>
            <doStatement>
              <subroutineCall>
                <expressionList/>
                <symbol>)</symbol>
              </subroutineCall>
              <symbol>;</symbol>
            </doStatement>
            <letStatement/>
            <doStatement>
              <subroutineCall>
                <expressionList/>
                <symbol>)</symbol>
              </subroutineCall>
              <symbol>;</symbol>
            </doStatement>
            <doStatement>
              <subroutineCall>
                <expressionList/>
                <symbol>)</symbol>
              </subroutineCall>
              <symbol>;</symbol>
            </doStatement>
          </statements>
          <symbol>}</symbol>
        </ifStatement>
        <returnStatement/>
      </statements>
      <symbol>}</symbol>
    </subroutineBody>
  </subroutineDec>
  <subroutineDec>
    <keyword>method</keyword>
    <keyword>void</keyword>
    <identifier>moveRight</identifier>
    <symbol>(</symbol>
    <parameterList/>
    <symbol>)</symbol>
    <subroutineBody>
      <symbol>{</symbol>
      <statements>
        <ifStatement>
          <statements>
            <doStatement>
              <subroutineCall>
                <expressionList/>
                <symbol>)</symbol>
              </subroutineCall>
              <symbol>;</symbol>
            </doStatement>
            <doStatement>
              <subroutineCall>
                <expressionList/>
                <symbol>)</symbol>
              </subroutineCall>
              <symbol>;</symbol>
            </doStatement>
            <letStatement/>
            <doStatement>
              <subroutineCall>
                <expressionList/>
                <symbol>)</symbol>
              </subroutineCall>
              <symbol>;</symbol>
            </doStatement>
            <doStatement>
              <subroutineCall>
                <expressionList/>
                <symbol>)</symbol>
              </subroutineCall>
              <symbol>;</symbol>
            </doStatement>
          </statements>
          <symbol>}</symbol>
        </ifStatement>
        <returnStatement/>
      </statements>
      <symbol>}</symbol>
    </subroutineBody>
  </subroutineDec>
</class>
